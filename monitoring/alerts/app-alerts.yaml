apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: app-alerts
  namespace: monitoring
  labels:
    release: monitoring # Assuming 'monitoring' is your Helm release name for kube-prometheus-stack
spec:
  groups:
    - name: fastapi.rules
      rules:
        # Existing Alert
        - alert: HighErrorRate
          expr: sum(rate(http_requests_total{job="fastapi-app", status=~"5.."}[1m])) by (instance) / sum(rate(http_requests_total{job="fastapi-app"}[1m])) by (instance) > 0.05
          for: 1m
          labels:
            severity: warning
            app: fastapi-app
          annotations:
            summary: "High 5xx error rate detected on FastAPI ({{ $labels.instance }})"
            description: "More than 5% of requests are failing with 5xx errors on instance {{ $labels.instance }}."

        # New Alert: High Latency
        # Triggers if 90th percentile of HTTP request duration exceeds 5 seconds for 5 minutes
        - alert: HighLatency
          expr: histogram_quantile(0.90, sum by (le, instance) (rate(http_request_duration_seconds_bucket{job="fastapi-app"}[5m]))) > 5
          for: 5m
          labels:
            severity: critical
            app: fastapi-app
          annotations:
            summary: "High latency detected on FastAPI ({{ $labels.instance }})"
            description: "P90 of HTTP request duration for FastAPI is above 5 seconds for 5 minutes on instance {{ $labels.instance }}."

        # New Alert: No Requests (potential downtime or traffic routing issue)
        # Triggers if no requests are received for 5 minutes
        - alert: NoRequests
          expr: sum(rate(http_requests_total{job="fastapi-app"}[5m])) by (instance) == 0
          for: 5m
          labels:
            severity: critical
            app: fastapi-app
          annotations:
            summary: "No requests detected on FastAPI ({{ $labels.instance }})"
            description: "FastAPI instance {{ $labels.instance }} has not received any HTTP requests for 5 minutes. Possible outage or traffic routing issue."

        # New Alert: Frequent Pod Restarts
        # Triggers if a FastAPI Pod restarts more than 3 times in 15 minutes
        - alert: FrequentPodRestarts
          expr: sum(changes(kube_pod_container_status_restarts_total{container="fastapi-app", job="kube-state-metrics", namespace="default"}[15m])) by (pod) > 3
          for: 5m
          labels:
            severity: warning
            app: fastapi-app
          annotations:
            summary: "FastAPI pod restarting frequently ({{ $labels.pod }})"
            description: "Pod {{ $labels.pod }} in namespace default has restarted more than 3 times in the last 15 minutes. Check pod logs for errors."

        # New Alert: High CPU Usage
        # Triggers if a FastAPI Pod's CPU usage is above 90% for 5 minutes
        - alert: HighCPULoad
          expr: sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{container="fastapi-app", namespace="default"} * on (namespace, pod) group_left() kube_pod_container_resource_limits{job="kube-state-metrics", resource="cpu", unit="core"} ) by (pod) > 0.90
          for: 5m
          labels:
            severity: warning
            app: fastapi-app
          annotations:
            summary: "High CPU usage on FastAPI pod ({{ $labels.pod }})"
            description: "Pod {{ $labels.pod }} is consuming more than 90% of its CPU limit for 5 minutes. Consider increasing CPU limits or scaling out."

        # New Alert: High Memory Usage
        # Triggers if a FastAPI Pod's memory usage is above 80% of its limit for 5 minutes
        - alert: HighMemoryUsage
          expr: sum(container_memory_usage_bytes{container="fastapi-app", namespace="default"} / on (namespace, pod) group_left() kube_pod_container_resource_limits{job="kube-state-metrics", resource="memory", unit="byte"}) by (pod) > 0.80
          for: 5m
          labels:
            severity: warning
            app: fastapi-app
          annotations:
            summary: "High Memory usage on FastAPI pod ({{ $labels.pod }})"
            description: "Pod {{ $labels.pod }} is consuming more than 80% of its memory limit for 5 minutes. Consider increasing memory limits or optimizing memory usage."

        # New Alert: Unexpected 4xx Error Rate (Client Errors)
        # While 4xx are client errors, a sudden spike can indicate bad requests or misused API.
        - alert: UnexpectedClientErrorRate
          expr: sum(rate(http_requests_total{job="fastapi-app", status=~"4.."}[5m])) by (instance) / sum(rate(http_requests_total{job="fastapi-app"}[5m])) by (instance) > 0.10
          for: 5m
          labels:
            severity: warning
            app: fastapi-app
          annotations:
            summary: "Unexpected client error rate on FastAPI ({{ $labels.instance }})"
            description: "More than 10% of requests are returning 4xx client errors on instance {{ $labels.instance }}. Investigate client behavior or API usage."